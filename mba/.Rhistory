# Set the path to the file
file_path <- "~/Desktop/quant_uxr/datasets/GSS.rdata"
# Load the .RData file
load(file_path)
# List the objects loaded from the file
print(ls())
# Assuming the dataset is stored as a data frame named 'GSS', print the first few rows
head(GSS)
# Set the path to the file
file_path <- "~/Desktop/quant_uxr/datasets/GSS.rdata"
# Load the .RData file
load(file_path)
# Assuming the dataset is stored as a data frame named 'GSS', print the first few rows
head(GSS)
# Set the path to the file
file_path <- "~/Desktop/quant_uxr/datasets/BBB.csv"
# Load the .RData file
load(file_path)
# Set the path to the file
file_path <- "~/Desktop/quant_uxr/datasets/BBB.csv"
# Load the .csv file
df <- read.csv(file_path)
# Print the first few rows of the dataset
head(df)
# Tabulate the counts for "gender"
gender_counts <- table(GSS$gender)
# Print the counts
print(gender_counts)
# Calculate the frequencies (proportions)
gender_freq <- prop.table(gender_counts)
# Print the frequencies
print(gender_freq)
# Tabulate the counts for "gender"
gender_counts <- table(df$gender)
# Print the counts
print(gender_counts)
# Calculate the frequencies (proportions)
gender_freq <- prop.table(gender_counts)
# Print the frequencies
print(gender_freq)
# Load the knitr package for pretty printing
library(knitr)
# Tabulate the counts for "gender"
gender_counts <- table(GSS$gender)
# Calculate the frequencies (proportions)
gender_freq <- prop.table(gender_counts)
# Combine the counts and frequencies into a data frame for better readability
gender_summary <- data.frame(
Gender = names(gender_counts),
Count = as.integer(gender_counts),
Frequency = round(gender_freq, 2)
)
# Print the table using kable for a pretty output
kable(gender_summary, col.names = c("Gender", "Count", "Frequency"), format = "pipe")
# Load the knitr package for pretty printing
library(knitr)
# Tabulate the counts for "gender"
gender_counts <- table(df$gender)
# Calculate the frequencies (proportions)
gender_freq <- prop.table(gender_counts)
# Combine the counts and frequencies into a data frame for better readability
gender_summary <- data.frame(
Gender = names(gender_counts),
Count = as.integer(gender_counts),
Frequency = round(gender_freq, 2)
)
# Print the table using kable for a pretty output
kable(gender_summary, col.names = c("Gender", "Count", "Frequency"), format = "pipe")
# Tabulate the counts for "gender"
gender_counts <- table(GSS$gender)
# Print the counts
print(gender_counts)
# Calculate the frequencies (proportions)
gender_freq <- prop.table(gender_counts)
# Print the frequencies
print(gender_freq)
# Tabulate the counts for "gender"
gender_counts <- table(GSS$gender)
# Print the counts
print(gender_counts)
# Calculate the frequencies (proportions)
gender_freq <- prop.table(gender_counts)
# Print the frequencies
print(gender_freq)
# Tabulate the counts for "gender"
gender_counts <- table(df$gender)
# Print the counts
print(gender_counts)
# Calculate the frequencies (proportions)
gender_freq <- prop.table(gender_counts)
# Print the frequencies
print(gender_freq)
# Tabulate the counts for "gender"
state_counts <- table(df$state)
# Print the counts
print(state_counts)
# Calculate the frequencies (proportions)
state_freq <- prop.table(state_counts)
# Print the frequencies
print(state_freq)
# Tabulate the counts for "state"
state_counts <- table(df$state)
# Sort the counts in descending order to get the most frequent states first
sorted_counts <- sort(state_counts, decreasing = TRUE)
# Print the sorted counts (Top 3)
print(head(sorted_counts, 3))
# Tabulate the counts for "state"
total_sum <- sum(total_)
# Tabulate the counts for "state"
total_sum <- sum(df$total_)
# Sort the counts in descending order to get the most frequent states first
total_num <- mean(df$purch)
# Tabulate the counts for "state"
total_sum <- sum(df$total_)
print(total_sum)
# Sort the counts in descending order to get the most frequent states first
total_num <- mean(df$purch)
# Tabulate the counts for "state"
total_sum <- sum(df$total_)
print(total_sum)
# Sort the counts in descending order to get the most frequent states first
total_num <- mean(df$purch)
summary(df$total_)
